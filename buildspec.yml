version: 0.2
phases:
    install:
        runtime-version:
            docker: 18
    pre_build:
        commands:
            - env
            - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
            - pip install requests
            - apt update && apt install -y curl
            - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.17.3/bin/linux/amd64/kubectl
            - chmod +x kubectl && cp kubectl /usr/local/bin/.
            - mkdir -p ~/.kube && aws ssm get-parameter --with-decryption --name /mss-devops/mss-k8s/dev/kubectl | jq '.Parameter.Value' | sed -e 's/\"//mg' | base64 -d > ~/.kube/config
            - kubectl version
    build:
        commands:
            - BRANCH=$CODEBUILD_WEBHOOK_HEAD_REF
            - TAG="$CODEBUILD_SOURCE_VERSION"
            - 'if [ "$CODEBUILD_WEBHOOK_HEAD_REF" = "refs/heads/master" ]; then BRANCH="master"; TAG="latest"; fi'
            - 'if [ "$CODEBUILD_WEBHOOK_HEAD_REF" = "refs/heads/develop" ]; then BRANCH="develop"; TAG="dev"; fi'
            - echo $BRANCH
            - echo $TAG
            - docker run -d --rm --name postgres -p 5432:5432 -e POSTGRES_USER=$DB_USER -e POSTGRES_PASSWORD=$DB_PASSWORD -e POSTGRES_DB=Registration postgres:11-alpine
            - docker build -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/registration:$TAG  -t $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/registration:$CODEBUILD_BUILD_NUMBER --build-arg DB_ADDRESS="jdbc:postgresql://$(docker inspect postgres | jq .[0].NetworkSettings.Networks.bridge.IPAddress | sed -e 's/\"//mg'):5432/Registration" --build-arg DB_USER=$DB_USER --build-arg DB_PASSWORD=$DB_PASSWORD --build-arg SPRING_PROFILES_ACTIVE=$SPRING_PROFILES_ACTIVE --build-arg SERVER_PORT=8080 .
            - docker stop postgres
            - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/registration:$TAG
            - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/registration:$CODEBUILD_BUILD_NUMBER
            - 'if [ "$BRANCH" = "master" ]; then kubectl apply -f kube/deploy.yaml && kubectl rollout restart deployment registration; fi'
            - 'if [ "$BRANCH" = "develop" ]; then kubectl apply -f kube/deploy-dev.yaml && kubectl rollout restart deployment registration-dev; fi'
    post_build:
        commands:
